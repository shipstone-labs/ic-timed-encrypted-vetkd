type anon_class_15_1 = 
 service {
   create_note: () -> (nat);
   delete_note: (nat) -> ();
   get_notes: () -> (vec EncryptedNote);
   update_note: (nat, text, text) -> ();
   add_user: (nat, PrincipalEntry) -> ();
   remove_user: (nat, opt text) -> ();
   whoami: () -> (text);
   symmetric_key_verification_key_for_note: () -> (text);
   encrypted_symmetric_key_for_note: (nat, blob) -> (text);
 };

type PrincipalEntry = 
 record {
   name: opt text;
   when: opt int;
 };
type EncryptedNote = 
 record {
   encrypted_text: text;
   data: text;
   id: nat;
   owner: text;
   users: vec PrincipalEntry;
 };
service : () -> anon_class_15_1
